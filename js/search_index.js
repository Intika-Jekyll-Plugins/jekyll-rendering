var search_data = {"index":{"searchIndex":["jekyll","convertible","engine","base","erb","helpers","lazystruct","liquid","rendering","version","[]()","_render()","_render_erb()","_rendering_original_do_layout()","add_code_tags()","do_layout()","engine()","highlight()","include_file()","new()","new()","new()","render()","render()","render()","render()","render_codehighlighter()","render_error()","render_pygments()","to_a()","to_s()","copying","changelog","readme"],"longSearchIndex":["jekyll","jekyll::convertible","jekyll::engine","jekyll::engine::base","jekyll::engine::erb","jekyll::engine::erb::helpers","jekyll::engine::erb::lazystruct","jekyll::engine::liquid","jekyll::rendering","jekyll::rendering::version","jekyll::engine::[]()","jekyll::engine::erb#_render()","jekyll::engine::erb#_render_erb()","jekyll::convertible#_rendering_original_do_layout()","jekyll::engine::erb::helpers#add_code_tags()","jekyll::convertible#do_layout()","jekyll::convertible#engine()","jekyll::engine::erb::helpers#highlight()","jekyll::engine::erb::helpers#include_file()","jekyll::engine::base::new()","jekyll::engine::erb::new()","jekyll::engine::erb::lazystruct::new()","jekyll::engine::base#render()","jekyll::engine::base::render()","jekyll::engine::erb#render()","jekyll::engine::liquid#render()","jekyll::engine::erb::helpers#render_codehighlighter()","jekyll::engine::base#render_error()","jekyll::engine::erb::helpers#render_pygments()","jekyll::rendering::version::to_a()","jekyll::rendering::version::to_s()","","",""],"info":[["Jekyll","","Jekyll.html","",""],["Jekyll::Convertible","","Jekyll/Convertible.html","",""],["Jekyll::Engine","","Jekyll/Engine.html","",""],["Jekyll::Engine::Base","","Jekyll/Engine/Base.html","",""],["Jekyll::Engine::Erb","","Jekyll/Engine/Erb.html","",""],["Jekyll::Engine::Erb::Helpers","","Jekyll/Engine/Erb/Helpers.html","",""],["Jekyll::Engine::Erb::LazyStruct","","Jekyll/Engine/Erb/LazyStruct.html","",""],["Jekyll::Engine::Liquid","","Jekyll/Engine/Liquid.html","",""],["Jekyll::Rendering","","Jekyll/Rendering.html","",""],["Jekyll::Rendering::Version","","Jekyll/Rendering/Version.html","",""],["[]","Jekyll::Engine","Jekyll/Engine.html#method-c-5B-5D","(engine)","<p>Returns the subclass whose name corresponds to <code>engine</code>.\n"],["_render","Jekyll::Engine::Erb","Jekyll/Engine/Erb.html#method-i-_render","(doc, binding, args = [])",""],["_render_erb","Jekyll::Engine::Erb","Jekyll/Engine/Erb.html#method-i-_render_erb","(doc, binding, args = Rendering::ERB_OPTIONS)",""],["_rendering_original_do_layout","Jekyll::Convertible","Jekyll/Convertible.html#method-i-_rendering_original_do_layout","(payload, layouts)",""],["add_code_tags","Jekyll::Engine::Erb::Helpers","Jekyll/Engine/Erb/Helpers.html#method-i-add_code_tags","(code, lang)",""],["do_layout","Jekyll::Convertible","Jekyll/Convertible.html#method-i-do_layout","(payload, layouts)","<p>Overwrites the original method to use the configured rendering engine.\n"],["engine","Jekyll::Convertible","Jekyll/Convertible.html#method-i-engine","()","<p>Returns the Engine class according to the configuration setting for\n<code>engine</code> (see subclasses of Engine::Base …\n"],["highlight","Jekyll::Engine::Erb::Helpers","Jekyll/Engine/Erb/Helpers.html#method-i-highlight","(text, lang = :ruby)","<p>Highlights <code>text</code> according to <code>lang</code> (defaults to\nRuby).\n"],["include_file","Jekyll::Engine::Erb::Helpers","Jekyll/Engine/Erb/Helpers.html#method-i-include_file","(file, local_assigns = {})","<p>Includes file <code>file</code> from <code>_includes</code> directory, or\ncurrent directory if <code>file</code> starts with <code>./</code>,\nrendered as …\n"],["new","Jekyll::Engine::Base","Jekyll/Engine/Base.html#method-c-new","(payload, content = nil, info = {}, data = {})",""],["new","Jekyll::Engine::Erb","Jekyll/Engine/Erb.html#method-c-new","(*args)",""],["new","Jekyll::Engine::Erb::LazyStruct","Jekyll/Engine/Erb/LazyStruct.html#method-c-new","(hash)",""],["render","Jekyll::Engine::Base","Jekyll/Engine/Base.html#method-i-render","()","<p>Renders the output. Must be implemented by subclass.\n"],["render","Jekyll::Engine::Base","Jekyll/Engine/Base.html#method-c-render","(payload, content, info, data = {}, layout = nil)","<p>Renders the output. Defers to engine’s render method.\n"],["render","Jekyll::Engine::Erb","Jekyll/Engine/Erb.html#method-i-render","(content = content, local_assigns = {}, *args)","<p>Renders the <code>content</code> as ERB template. Assigns optional\n<code>local_assigns</code> for use in template if provided. …\n"],["render","Jekyll::Engine::Liquid","Jekyll/Engine/Liquid.html#method-i-render","(content = content)","<p>Renders the <code>content</code> using ::Liquid::Template::parse and then\ncalling ::Liquid::Template#render with  …\n"],["render_codehighlighter","Jekyll::Engine::Erb::Helpers","Jekyll/Engine/Erb/Helpers.html#method-i-render_codehighlighter","(text, lang)",""],["render_error","Jekyll::Engine::Base","Jekyll/Engine/Base.html#method-i-render_error","(err, renderer = nil, trace = Rendering::ERROR_TRACE)",""],["render_pygments","Jekyll::Engine::Erb::Helpers","Jekyll/Engine/Erb/Helpers.html#method-i-render_pygments","(text, lang)",""],["to_a","Jekyll::Rendering::Version","Jekyll/Rendering/Version.html#method-c-to_a","()","<p>Returns array representation.\n"],["to_s","Jekyll::Rendering::Version","Jekyll/Rendering/Version.html#method-c-to_s","()","<p>Short-cut for version string.\n"],["COPYING","","COPYING.html","","<p>License for jekyll-rendering\n\n<pre>                    GNU AFFERO GENERAL PUBLIC LICENSE\n                   ...</pre>\n"],["ChangeLog","","ChangeLog.html","","<p>Revision history for jekyll-rendering\n<p>0.0.9 []\n<p>Include backtrace in render_error.\n"],["README","","README.html","","<p>jekyll-rendering - Jekyll plugin to provide alternative rendering engines.\n<p>VERSION\n<p>This documentation refers …\n"]]}}